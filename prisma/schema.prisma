// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  userId             String @db.ObjectId
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  userId       String @db.ObjectId
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model User {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  email   String   @unique
  name    String?
  password String?
  device  DeviceParent?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  accounts      Account[]
  sessions      Session[]
}

model DeviceParent {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier  String @unique
  userId  String? @db.ObjectId @unique
  owner User? @relation(fields: [userId], references: [id])
  devices Device[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Device {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  deviceName  String
  description String
  parentIdentifier String
  parent DeviceParent? @relation(fields: [parentIdentifier], references: [identifier])
  locationLogs LocationLogs[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model LocationLogs {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  long    String
  lat     String
  time    String
  deviceId String @db.ObjectId @unique
  device  Device @relation(fields: [deviceId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
